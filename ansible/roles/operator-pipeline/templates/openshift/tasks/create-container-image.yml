---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: create-container-image
spec:
  params:
    - name: pyxis_cert_path
      default: ""
      description: Path to Pyxis certificates. Valid only when internal Pyxis is used.
    - name: pyxis_key_path
      default: ""
      description: Path to Pyxis key. Valid only when internal Pyxis is used.
    - name: pyxis_url
      default: https://catalog.redhat.com/api/containers/
    - name: isv_pid
      description: isv_pid of the certification project from Red Hat Connect
    - name: registry
      description: certification project registry
    - name: repository_name
      description: Repository name assigned to certification project from Red Hat Connect
    - name: container_digest
      description: imagestream container_digest
    - name: skopeo_result
      description: Result of `skopeo inspect` running against image represented by ContainerImage to be created
  workspaces:
    - name: pyxis-ssl-credentials
  steps:
    - name: create-container-image
      image: quay.io/redhat-isv/operator-pipelines-images:latest
      env:
        - name: PYXIS_CERT_PATH
          value: $(params.pyxis_cert_path)
        - name: PYXIS_KEY_PATH
          value: $(params.pyxis_key_path)
        - name: PYXIS_URL
          value: $(params.pyxis_url)
        - name: ISV_PID
          value: $(params.isv_pid)
        - name: REGISTRY
          value: $(params.registry)
        - name: REPOSITORY
          value: $(params.repository_name)
        - name: CONTAINER_DIGEST
          value: $(params.container_digest)
      script: |
        #! /usr/bin/env bash
        set -xe
        echo "Creating container image"

        # Store skopeo_results
        SKOPEO_RESULT_FILE=skopeo_result.json
        echo "$(params.skopeo_result)" > $SKOPEO_RESULT_FILE

        create-container-image \
          --pyxis-url $PYXIS_URL \
          --isv-pid $ISV_PID \
          --repo-published "true" \
          --registry $REGISTRY \
          --repository $REPOSITORY \
          --certified "true" \
          --docker-image-digest $CONTAINER_DIGEST \
          --skopeo-result $SKOPEO_RESULT_FILE \
          --verbose
